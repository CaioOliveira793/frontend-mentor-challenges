{"version":3,"sources":["webpack:///./src/components/Tag/styles.ts","webpack:///./src/components/Tag/index.tsx","webpack:///./src/modules/Country/styles.ts","webpack:///./src/modules/Country/index.tsx","webpack:///./src/pages/countries.tsx"],"names":["Container","styled","div","theme","value","borderRadius","colors","elements","shadow","text","Tag","children","NavigationContainer","maxPageWidth","StyledLink","Link","CountryContentContainer","FlagImage","img","CountryDetailsContainer","Name","h2","InfoContainer","TagContainer","Country","countryCode","navigate","useNavigate","useState","countryDetailsData","setCountryDetailsData","useEffect","a","countriesAPI","get","countryResponse","countryData","data","borderCountryData","borders","length","join","borderCountryResponse","withPrefix","loadCountryDetails","Header","to","size","src","flag","name","Info","infoKey","infoValue","nativeName","population","region","subregion","capital","topLevelDomain","currencies","languages","map","CountriesRoute","path","from","noThrow"],"mappings":"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","file":"component---src-pages-countries-tsx-2a7733d910916c546e37.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\talign-items: center;\n\tjustify-content: flex-start;\n\n\theight: 30px;\n\tpadding: 12px 26px;\n\tborder-radius: ${({ theme }) => theme.value.borderRadius};\n\n\tbackground: ${({ theme }) => theme.value.colors.elements};\n\tbox-shadow: ${({ theme }) => theme.value.shadow};\n\tcolor: ${({ theme }) => theme.value.colors.text};\n\ttext-decoration: none;\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst Tag: React.FC = ({ children }) => {\n\treturn (\n\t\t<Container>\n\t\t\t{children}\n\t\t</Container>\n\t);\n}\n\nexport default Tag;\n","import styled from 'styled-components';\n\nimport { Link } from 'gatsby';\n\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-flow: column nowrap;\n\tflex-basis: 100%;\n\talign-items: center;\n\tjustify-content: flex-start;\n`;\n\nexport const NavigationContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\tflex-basis: 100%;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 32px;\n\n\tmax-width: ${({ theme }) => theme.value.maxPageWidth};\n\twidth: 100%;\n\tmargin: 58px 0px;\n\tpadding: 0px 40px;\n\n\t@media (max-width: 575px) {\n\t\tflex-wrap: wrap;\n\t\tgap: 16px;\n\t}\n`;\n\nexport const StyledLink = styled(Link)`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\talign-items: center;\n\tjustify-content: flex-start;\n\n\theight: 40px;\n\tpadding: 12px 26px;\n\tborder-radius: ${({ theme }) => theme.value.borderRadius};\n\n\tbackground: ${({ theme }) => theme.value.colors.elements};\n\tbox-shadow: ${({ theme }) => theme.value.shadow};\n\tcolor: ${({ theme }) => theme.value.colors.text};\n\ttext-decoration: none;\n\n\tcursor: pointer;\n\n\t> svg {\n\t\tmargin-right: 16px;\n\t\tcolor: ${({ theme }) => theme.value.colors.text};\n\t\tpointer-events: none;\n\t}\n`;\n\nexport const CountryContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 92px;\n\n\tmax-width: ${({ theme }) => theme.value.maxPageWidth};\n\twidth: 100%;\n\tpadding: 0px 40px;\n\n\t@media (max-width: 1030px) {\n\t\tflex-direction: column;\n\t\tgap: 56px;\n\t}\n\n\t@media (max-width: 600px) {\n\t\tgap: 22px;\n\t}\n`;\n\nexport const FlagImage = styled.img`\n\tmax-width: 520px;\n\twidth: 100%;\n\t\n\t@media (max-width: 1030px) {\n\t\tmax-width: 740px;\n\t}\n`;\n\nexport const CountryDetailsContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: column nowrap;\n\talign-items: flex-start;\n\tjustify-content: center;\n\n\twidth: 100%;\n\theight: 100%;\n\n\t@media (max-width: 1030px) {\n\t\talign-items: center;\n\t}\n`;\n\nexport const Name = styled.h2`\n\tfont-size: 26px;\n\tfont-weight: 800;\n\tpadding: 22px 0px;\n\tcolor: ${({ theme }) => theme.value.colors.text};\n`;\n\nexport const InfoContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: column wrap;\n\talign-items: space-between;\n\tjustify-content: flex-start;\n\tgap: 8px 32px;\n\n\twidth: 100%;\n\theight: 100px;\n`;\n\nexport const TagContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: row wrap;\n\talign-items: center;\n\tjustify-content: flex-start;\n\tgap: 12px;\n\n\tmargin: 32px 0px;\n\tfont-weight: 600;\n\n\tcolor: ${({ theme }) => theme.value.colors.text};\n\n\t@media (max-width: 1030px) {\n\t\twidth: 100%;\n\t}\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { RouteComponentProps, useNavigate } from '@reach/router';\n\nimport Header from '../../components/Header';\nimport Info from '../../components/Info';\nimport Tag from '../../components/Tag';\n\nimport countriesAPI from '../../services/countriesAPI';\n\nimport { Container, NavigationContainer, StyledLink, CountryContentContainer,\n\tFlagImage, CountryDetailsContainer, Name, InfoContainer, TagContainer } from './styles';\nimport { withPrefix } from 'gatsby';\n\ninterface CountryDetailData {\n\tflag: string;\n\tname: string;\n\tnativeName: string;\n\tpopulation: number;\n\tregion: string;\n\tsubregion: string;\n\ttopLevelDomain: string[];\n\tcapital: string;\n\tcurrencies: {\n\t\tcode: string;\n\t\tname: string;\n\t}[];\n\tlanguages: {\n\t\tname: string;\n\t}[];\n\tborders: {\n\t\tname: string;\n\t}[];\n}\n\ninterface CountryProps extends RouteComponentProps {\n\tcountryCode?: string;\n}\n\nconst Country: React.FC<CountryProps> = ({ countryCode }) => {\n\tconst navigate = useNavigate();\n\tconst [countryDetailsData, setCountryDetailsData] = useState<CountryDetailData>(null as unknown as CountryDetailData);\n\n\tuseEffect(() => {\n\t\tasync function loadCountryDetails() {\n\t\t\ttry {\n\t\t\t\tconst countryResponse = await countriesAPI.get<CountryDetailData>(`/alpha/${countryCode}`);\n\t\t\t\tconst countryData = countryResponse.data;\n\n\t\t\t\tlet borderCountryData = [];\n\t\t\t\tif (countryData.borders.length >= 1) {\n\t\t\t\t\tconst borderCountryResponse = await countriesAPI.get(`/alpha?codes=${countryData.borders.join(';')}`);\n\t\t\t\t\tborderCountryData = borderCountryResponse.data;\n\t\t\t\t}\n\n\t\t\t\tsetCountryDetailsData({\n\t\t\t\t\t...countryData,\n\t\t\t\t\tborders: borderCountryData\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tnavigate(withPrefix('/'));\n\t\t\t}\n\t\t}\n\t\tloadCountryDetails();\n\t}, [countryCode, setCountryDetailsData]);\n\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header />\n\t\t\t<NavigationContainer>\n\t\t\t\t<StyledLink to=\"/\">\n\t\t\t\t\t<FaArrowLeft size={16} />\n\t\t\t\t\tBack\n\t\t\t\t</StyledLink>\n\t\t\t</NavigationContainer>\n\t\t\t<CountryContentContainer>\n\t\t\t\t{countryDetailsData &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FlagImage src={countryDetailsData.flag} />\n\t\t\t\t\t\t<CountryDetailsContainer>\n\t\t\t\t\t\t\t<Name>{countryDetailsData.name}</Name>\n\t\t\t\t\t\t\t<InfoContainer>\n\t\t\t\t\t\t\t\t<Info infoKey=\"Native Name\" infoValue={countryDetailsData.nativeName} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Population\" infoValue={countryDetailsData.population} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Region\" infoValue={countryDetailsData.region} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Sub Region\" infoValue={countryDetailsData.subregion} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Capital\" infoValue={countryDetailsData.capital} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Top Level Domain\" infoValue={countryDetailsData.topLevelDomain[0]} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Currencies\" infoValue={countryDetailsData.currencies[0].name} />\n\t\t\t\t\t\t\t\t<Info infoKey=\"Languages\" infoValue={countryDetailsData.languages[0].name} />\n\t\t\t\t\t\t\t</InfoContainer>\n\t\t\t\t\t\t\t{countryDetailsData.borders &&\n\t\t\t\t\t\t\t\t<TagContainer>\n\t\t\t\t\t\t\t\t\tBorder Countries:\n\t\t\t\t\t\t\t\t\t{countryDetailsData.borders.map(({ name }) => (\n\t\t\t\t\t\t\t\t\t\t<Tag>{name}</Tag>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</TagContainer>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</CountryDetailsContainer>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</CountryContentContainer>\n\t\t</Container>\n\t);\n}\n\nexport default Country;\n","import React from 'react';\nimport { withPrefix } from \"gatsby\"\nimport { Router, Redirect } from '@reach/router';\n\nimport Country from '../modules/Country';\n\n\nconst CountriesRoute: React.FC = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Country path={withPrefix('countries/:countryCode')} />\n\t\t\t<Redirect from={withPrefix('countries/*')} to={withPrefix('/')} noThrow />\n\t\t</Router>\n\t);\n}\n\nexport default CountriesRoute;\n"],"sourceRoot":""}